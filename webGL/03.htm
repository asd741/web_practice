<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<style>
    body {
        margin: 0px;
    }

    #stats {
        position: absolute;
        left: 0;
        top: 0;
    }
</style>

<body>
    <div id="stats"></div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/96/three.min.js"></script>
    <script src="https://threejs.org/examples/js/controls/OrbitControls.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/stats.js/r16/Stats.min.js"></script>

    <script>
        let renderer, scene, camera;
        let cameraControl, stats;

        function initStats() {
            const stats = new Stats();
            stats.setMode(0);
            document.getElementById('stats').appendChild(stats.domElement);
            return stats;
        }

        // 自訂頂點創建粒子系統

        function generateSprite() {
            var canvas = document.createElement('canvas');
            canvas.width = 16;
            canvas.height = 16;

            var context = canvas.getContext('2d');
            var gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);
            gradient.addColorStop(0, 'rgba(255,255,255,1)');
            gradient.addColorStop(0.2, 'rgba(0,255,255,1)');
            gradient.addColorStop(0.4, 'rgba(0,0,64,1)');
            gradient.addColorStop(1, 'rgba(0,0,0,1)');

            context.fillStyle = gradient;
            context.fillRect(0, 0, canvas.width, canvas.height);

            var texture = new THREE.Texture(canvas);
            texture.needsUpdate = true;
            return texture;
        }
        function createSpherePoints() {
            const geometry = new THREE.SphereGeometry(60, 60, 20)
            const material = new THREE.PointsMaterial({
                color: 0xffffff,
                size: 3,
                transparent: true,
                blending: THREE.AdditiveBlending,
                map: generateSprite()
            });
            let spherePoints = new THREE.Points(geometry, material) // 用球體與材質建立一個粒子系統
            spherePoints.position.set(0, 0, 0)
            scene.add(spherePoints)
        }

        function init() {
            scene = new THREE.Scene()
            camera = new THREE.PerspectiveCamera(
                60,
                window.innerWidth / window.innerHeight,
                0.1,
                1000
            )
            camera.position.set(0, 0, 100)
            camera.lookAt(scene.position)

            cameraControl = new THREE.OrbitControls(camera)
            cameraControl.autoRotate = true
            stats = initStats()

            renderer = new THREE.WebGLRenderer()
            renderer.setSize(window.innerWidth, window.innerHeight)

            // 創建粒子系統
            createSpherePoints()

            // spotlight
            let spotLight = new THREE.SpotLight(0xffffff)
            spotLight.position.set(-10, 40, 30)
            scene.add(spotLight)

            document.body.appendChild(renderer.domElement)
        }

        function render() {
            stats.update()
            requestAnimationFrame(render)
            cameraControl.update()
            renderer.render(scene, camera)
        }

        window.addEventListener('resize', function () {
            camera.aspect = window.innerWidth / window.innerHeight
            camera.updateProjectionMatrix()
            renderer.setSize(window.innerWidth, window.innerHeight)
        })

        init()
        render()

    </script>
</body>

</html>